name: "Jekyll Build and Deploy"

on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Install Dependencies
        run: bundle install

      - name: Build site
        run: bundle exec jekyll b -d "_site${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: "production"

      - name: Clean _site folder
        run: |
          TARGET="_site${{ steps.pages.outputs.base_path }}"
          echo "🧼 Cleaning folder: $TARGET"

          echo "📎 Checking for symlinks..."
          find "$TARGET" -type l

          echo "🧹 Removing all symbolic links..."
          find "$TARGET" -type l -exec rm -v {} +

          echo "🔍 Checking for hard links..."
          find "$TARGET" -type f -links +1

          echo "🔁 Replacing hard links with unique copies..."
          find "$TARGET" -type f -links +1 -exec sh -c 'for file; do cp --remove-destination -f "$file" "$file.tmp" && mv -f "$file.tmp" "$file"; done' _ {} +

          echo "🪶 Deleting files larger than 10MB..."
          find "$TARGET" -type f -size +10M -delete

          echo "📦 Final size of _site:"
          du -sh "$TARGET"

      - name: Test site with htmlproofer
        run: |
          bundle exec htmlproofer _site \
            --disable-external \
            --ignore-urls "/^http:\/\/127.0.0.1/,/^http:\/\/0.0.0.0/,/^http:\/\/localhost/"

      - name: Upload site artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: "_site${{ steps.pages.outputs.base_path }}"
          if-no-files-found: error

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
          path: "_site${{ steps.pages.outputs.base_path }}"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
